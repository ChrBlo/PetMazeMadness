// Maze layout definitions
// 1 = wall
// 0 = path
// 2 = goal
// 3 = explosive wall
// 4 = snack (extra life)

export interface MazeLevel {
  id: number;
  name: string;
  timeLimit: number;
  layout: number[][];
  startPosition: { x: number; y: number };
}

export const MAZE_LEVELS: MazeLevel[] = [
  {
    id: 1,
    name: "Bana 1",
    timeLimit: 5000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 4, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 1, 0, 1, 0, 1, 1, 0, 1],
      [3, 0, 1, 0, 0, 0, 0, 1, 0, 1],
      [1, 0, 1, 1, 1, 1, 0, 1, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
      [1, 1, 1, 0, 1, 1, 1, 1, 0, 1],
      [1, 0, 0, 0, 1, 3, 0, 0, 0, 1],
      [1, 4, 1, 1, 1, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 2, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 2,
    name: "Bana 2",
    timeLimit: 4000,
    layout: [
      [1, 1, 1, 3, 1, 1, 1, 1, 1, 1],
      [1, 0, 1, 4, 0, 0, 0, 0, 0, 1],
      [1, 0, 1, 1, 1, 1, 0, 1, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 1],
      [1, 1, 1, 0, 1, 0, 0, 0, 0, 1],
      [1, 4, 0, 0, 1, 1, 1, 1, 0, 1],
      [1, 0, 3, 0, 0, 1, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 1, 0, 1, 1, 1],
      [1, 0, 1, 0, 0, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 3,
    timeLimit: 4000,
    name: "Bana 3",
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],
      [1, 0, 0, 0, 0, 4, 0, 1, 0, 1],
      [1, 1, 1, 1, 0, 1, 0, 1, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 0, 1],
      [1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 3, 1],
      [1, 1, 1, 1, 1, 1, 1, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 4,
    name: "Bana 4",
    timeLimit: 2000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 4, 0, 0, 0, 0, 0, 0, 0, 1],
      [3, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 3, 3, 0, 0, 0, 1],
      [1, 0, 0, 0, 3, 3, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 3, 1],
      [1, 4, 0, 0, 0, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 8, y: 1 }
  },
  {
    id: 5,
    name: "Bana 5",
    timeLimit: 5000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [3, 0, 1, 0, 1, 0, 3, 1, 0, 1],
      [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],
      [1, 0, 1, 1, 1, 1, 0, 1, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 3, 0, 1],
      [1, 1, 1, 0, 1, 1, 1, 1, 0, 1],
      [1, 0, 0, 0, 3, 0, 0, 0, 0, 1],
      [1, 4, 1, 1, 1, 1, 1, 1, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 6,
    name: "Bana 6",
    timeLimit: 5000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 1, 0, 1, 0, 1, 1, 0, 1],
      [1, 0, 1, 0, 0, 0, 0, 3, 0, 1],
      [1, 0, 1, 1, 3, 1, 0, 1, 2, 1],
      [1, 0, 0, 0, 0, 1, 0, 3, 0, 3],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 1, 1, 1, 3, 0, 1],
      [3, 4, 3, 1, 0, 0, 0, 0, 0, 1],
      [3, 3, 3, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 7,
    name: "Bana 7",
    timeLimit: 15000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 3, 1, 1],
      [1, 0, 3, 0, 0, 4, 0, 0, 0, 1],
      [1, 0, 1, 1, 1, 1, 1, 3, 0, 1],
      [1, 0, 0, 0, 3, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 1, 2, 1, 0, 1, 1],
      [1, 0, 0, 0, 1, 1, 1, 0, 0, 1],
      [1, 0, 0, 3, 1, 1, 1, 3, 0, 1],
      [1, 0, 3, 1, 1, 1, 3, 1, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 3, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 8,
    name: "Maddox bana (bana 8)",
    timeLimit: 10000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 1, 4, 3, 0, 0, 0, 0, 1],
      [3, 0, 1, 4, 0, 0, 0, 3, 0, 1],
      [1, 0, 1, 1, 1, 3, 0, 1, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 3, 0, 3],
      [1, 0, 1, 1, 0, 0, 0, 1, 0, 1],
      [1, 1, 1, 0, 1, 0, 1, 0, 0, 1],
      [1, 4, 0, 0, 3, 1, 1, 0, 3, 1],
      [1, 4, 3, 0, 0, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 9,
    name: "Bana 9",
    timeLimit: 2000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 4, 4, 0, 0, 0, 1],
      [1, 0, 0, 0, 4, 4, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 10,
    name: "Bana 10",
    timeLimit: 50000,
    layout: [
      [3, 1, 3, 1, 3, 1, 3, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [3, 0, 1, 3, 1, 3, 1, 3, 0, 3],
      [1, 1, 0, 0, 0, 0, 0, 0, 0, 1],
      [3, 4, 0, 3, 1, 1, 3, 1, 3, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 3],
      [3, 0, 3, 3, 1, 3, 0, 1, 4, 1],
      [1, 0, 1, 0, 0, 0, 0, 3, 3, 3],
      [3, 4, 3, 0, 3, 1, 3, 0, 2, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 3, 3],
    ],
    startPosition: { x: 1, y: 1 }
  },
  {
    id: 11,
    name: "Bana 11",
    timeLimit: 4000,
    layout: [
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 3, 1],
      [1, 0, 1, 1, 1, 1, 1, 0, 4, 1],
      [1, 0, 0, 0, 0, 0, 1, 0, 3, 1],
      [1, 1, 1, 3, 1, 0, 1, 0, 0, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 1, 1],
      [1, 0, 1, 0, 1, 1, 1, 0, 0, 1],
      [1, 0, 1, 0, 0, 0, 0, 0, 3, 1],
      [1, 4, 3, 1, 1, 3, 1, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 12,
    name: "Bana 12",
    timeLimit: 15000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 3, 0, 0, 3, 0, 4, 1],
      [1, 0, 1, 0, 0, 0, 1, 0, 1, 1],
      [1, 0, 3, 0, 3, 0, 0, 0, 1, 1],
      [1, 0, 1, 0, 1, 1, 1, 0, 0, 1],
      [1, 0, 1, 0, 0, 1, 0, 0, 0, 1],
      [1, 0, 1, 1, 0, 1, 0, 3, 1, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 0, 1],
      [1, 4, 1, 3, 0, 1, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 13,
    name: "Bana 13",
    timeLimit: 10000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 3, 0, 1, 0, 3, 4, 1, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 4, 1],
      [3, 0, 1, 0, 0, 0, 1, 0, 3, 1],
      [1, 0, 1, 3, 1, 3, 1, 0, 1, 1],
      [1, 0, 0, 0, 4, 0, 0, 0, 0, 1],
      [1, 3, 1, 0, 1, 0, 1, 3, 1, 1],
      [1, 4, 0, 0, 1, 0, 0, 0, 0, 3],
      [1, 1, 4, 3, 1, 0, 3, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 14,
    name: "Bana 14",
    timeLimit: 5000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 1, 3, 1, 3, 1, 3, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 3, 1, 0, 1, 0, 1, 0, 3, 1],
      [1, 0, 0, 0, 4, 0, 0, 0, 0, 1],
      [1, 0, 1, 0, 1, 0, 1, 3, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 4, 3, 1, 3, 1, 3, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 15,
    name: "Bana 15",
    timeLimit: 11000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 1, 0, 1, 0, 1, 0, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 4, 1],
      [1, 1, 0, 1, 3, 1, 0, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 4, 1],
      [1, 1, 1, 3, 4, 3, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 4, 1],
      [1, 1, 0, 1, 3, 1, 0, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 16,
    name: "Bana 16",
    timeLimit: 9500,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 3, 0, 0, 0, 4, 1],
      [1, 0, 1, 0, 3, 0, 1, 1, 0, 1],
      [1, 0, 3, 0, 3, 0, 3, 0, 0, 1],
      [1, 0, 0, 0, 4, 0, 0, 0, 1, 1],
      [1, 0, 3, 0, 3, 0, 3, 0, 0, 1],
      [1, 0, 1, 1, 3, 0, 1, 0, 1, 1],
      [1, 0, 1, 4, 3, 0, 1, 0, 2, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 17,
    name: "Bana 17",
    timeLimit: 13000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 3, 1, 0, 1, 0, 1, 3, 0, 1],
      [1, 0, 1, 0, 0, 0, 1, 0, 0, 1],
      [1, 0, 1, 1, 3, 1, 1, 0, 1, 1],
      [1, 0, 0, 0, 4, 0, 0, 0, 3, 1],
      [1, 0, 1, 1, 3, 1, 1, 3, 3, 1],
      [1, 0, 0, 0, 0, 0, 1, 4, 3, 1],
      [1, 4, 1, 3, 1, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 3, 3, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 18,
    name: "Bana 18",
    timeLimit: 15000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 3, 0, 0, 3, 0, 0, 4, 1],
      [1, 0, 0, 3, 0, 0, 0, 3, 0, 1],
      [1, 3, 0, 1, 0, 1, 3, 3, 0, 1],
      [1, 0, 0, 1, 0, 0, 4, 0, 0, 1],
      [1, 0, 3, 0, 0, 0, 3, 0, 0, 1],
      [1, 0, 3, 0, 1, 0, 0, 0, 3, 1],
      [1, 0, 3, 0, 1, 0, 1, 3, 3, 1],
      [1, 0, 0, 0, 3, 0, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 19,
    name: "Bana 19",
    timeLimit: 15000,
    layout: [
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 3, 0, 1, 4, 3, 0, 1, 1],
      [1, 0, 1, 0, 3, 0, 1, 0, 3, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 1, 3, 0, 4, 3, 3, 1, 1, 1],
      [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
      [1, 3, 0, 1, 0, 0, 0, 1, 0, 1],
      [1, 1, 0, 3, 0, 3, 0, 3, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 0, 2, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ],
    startPosition: { x: 1, y: 1 },
  },
  {
    id: 20,
    name: "Kiki's bana (bana 20)",
    timeLimit: 60000,
    layout: [
      [3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
      [3, 0, 0, 0, 3, 0, 0, 0, 4, 3],
      [3, 3, 3, 0, 3, 0, 3, 3, 0, 3],
      [3, 4, 3, 0, 3, 0, 0, 3, 0, 3],
      [3, 0, 0, 0, 3, 3, 0, 3, 0, 3],
      [3, 0, 3, 0, 3, 0, 0, 3, 0, 3],
      [3, 3, 3, 0, 3, 0, 3, 0, 0, 3],
      [3, 0, 0, 0, 3, 0, 3, 0, 3, 3],
      [3, 4, 3, 0, 0, 0, 3, 0, 2, 3],
      [3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ],
    startPosition: { x: 1, y: 1 },
  },
];

export const getCurrentLevel = (levelId: number): MazeLevel => {
  const level = MAZE_LEVELS.find(l => l.id === levelId);
  if (!level) {
    return MAZE_LEVELS[0];
  }
  return level;
};